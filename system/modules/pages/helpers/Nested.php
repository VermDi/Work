<?php

namespace modules\pages\helpers;
/**
 * Created by PhpStorm.
 * User: E_dulentsov
 * Date: 13.06.2017
 * Time: 12:53
 */
class Nested
{
    /**
     * Работает :)
     * @param $array
     * @param $level
     * @param bool $parent
     */
    public static function printNestedTree($array, $level, $parent = false)
    {

        echo "<ul>";

        foreach ($array as $v) {
            if ($v->level != $level) {
                continue;
            }
            if ($parent != false and ($v->left_key < $parent->left_key or $v->right_key > $parent->right_key)) {
                continue;
            }
            echo "<li id='" . $v->id . "'>" . $v->name . "<span style='display:none;'>" . $v->url . "</span>";
            self::printNestedTree($array, $level + 1, $v);
            echo "</li>";
        }
        echo "</ul>";

    }

    public static function printAjaxJsonTree($array, $level=0, $parent = false)
    {

        $new_arr = [];

        if (!empty($array)) {
            foreach ($array as $v) {
                $arr=[];
                if ($v->level != $level) {

                    continue;
                }

                if ($parent !== false and ($v->left_key < $parent->left_key or $parent->right_key < $v->right_key)) {
                    continue;
                }

                //if ($level==1) { echo $v->left_key."---".$parent->left_key."==".$v->right_key."--".$parent->right_key."}|";}

                $arr['id'] = $v->id;

                if ($v->visible == 1) {
                    $arr['text'] = $v->name . "<span style='display:none;'>" . $v->url . "</span>";
                } else {
                    $arr['text'] = "<span style='text-line-through: single;text-decoration:line-through;'>" . $v->name . "</span><span style='display:none;'>" . $v->url . "</span>";
                }
                $child = "";

                $arr['state']= (object)['opened'=>true, 'selected'=>false];
                if (!empty($child = self::printAjaxJsonTree($array, $level + 1, $v))) {
                   $arr['children'] = $child;
                }

                $new_arr[] = (object)$arr;
            }

            return $new_arr;
        } else {
            return false;
        }

    }


    /*
     * {
  id          : "string" // will be autogenerated if omitted
  text        : "string" // node text
  icon        : "string" // string for custom
  state       : {
    opened    : boolean  // is the node open
    disabled  : boolean  // is the node disabled
    selected  : boolean  // is the node selected
  },
  children    : []  // array of strings or objects
  li_attr     : {}  // attributes for the generated LI node
  a_attr      : {}  // attributes for the generated A node
}
     * */
}